steps:
  # Prepare Laravel production env file
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        if [ -z "${_APP_KEY:-}" ]; then APP_KEY="base64:$(head -c 32 /dev/urandom | base64)"; else APP_KEY="${_APP_KEY}"; fi
        cat > src/.env.production << 'EOF'
        APP_NAME=Laravel
        APP_ENV=production
        APP_KEY=${_APP_KEY}
        APP_DEBUG=false
        APP_URL=${_APP_URL}
        LOG_CHANNEL=stack
        LOG_LEVEL=info

        DB_CONNECTION=mysql
        DB_HOST=${_DB_HOST}
        DB_PORT=3306
        DB_DATABASE=${_DB_NAME}
        DB_USERNAME=${_DB_USER}
        DB_PASSWORD=${_DB_PASSWORD}

        CACHE_DRIVER=file
        SESSION_DRIVER=file
        QUEUE_CONNECTION=sync
        EOF

  # Build app image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/app/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-app:latest',
        '.'
      ]

  # Push app image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-app:latest']

  # Build nginx image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/nginx/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest',
        '.'
      ]

  # Push nginx image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest']

  # Build mysql image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/mysql/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest',
        '.'
      ]

  # Push mysql image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest']

  # Deploy to Cloud Run using multi-container YAML (nginx + app)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gcloud run services replace gcp/cloudrun-service.yaml \
          --region "$_REGION" --platform managed --quiet
        gcloud run services add-iam-policy-binding "$_SERVICE_NAME" \
          --region "$_REGION" --member="allUsers" --role="roles/run.invoker" --quiet

images:
  - 'gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-app:latest'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest' 

options:
  logging: CLOUD_LOGGING_ONLY
