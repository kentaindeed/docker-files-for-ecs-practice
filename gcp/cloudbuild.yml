steps:
  # Prepare Laravel production env file
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        APP_KEY="base64:$(head -c 32 /dev/urandom | base64)"
        cat > src/.env.production << 'EOF'
        APP_NAME=Laravel
        APP_ENV=production
        APP_KEY=${APP_KEY}
        APP_DEBUG=false
        APP_URL=${_APP_URL}
        LOG_CHANNEL=stack
        LOG_LEVEL=info

        DB_CONNECTION=mysql
        DB_HOST=${_DB_HOST}
        DB_PORT=3306
        DB_DATABASE=${_DB_NAME}
        DB_USERNAME=${_DB_USER}
        DB_PASSWORD=${_DB_PASSWORD}

        CACHE_DRIVER=file
        SESSION_DRIVER=file
        QUEUE_CONNECTION=sync
        EOF

  # Build app image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/app/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-app:latest',
        '.'
      ]

  # Push app image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-app:latest']

  # Build nginx image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/nginx/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest',
        '.'
      ]

  # Push nginx image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest']

  # Build mysql image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f','docker/mysql/Dockerfile.production',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA',
        '-t','gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest',
        '.'
      ]

  # Push mysql image (both tags)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest']

images:
  - 'gcr.io/$PROJECT_ID/ecs-laravel-app:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-app:latest'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-nginx:latest'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-mysql:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/ecs-laravel-mysql:latest'

# Deploy to Cloud Run (deploy nginx image)
# デプロイプレビュー中
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       [
#         'run','deploy','$_SERVICE_NAME',
#         '--image','gcr.io/$PROJECT_ID/ecs-laravel-nginx:$SHORT_SHA',
#         '--platform','managed',
#         '--region','$_REGION',
#         '--allow-unauthenticated',
#         '--port','8080',
#         '--quiet'
#       ]

# substitutions:
#   _SERVICE_NAME: ecs-laravel
#   _REGION: asia-northeast1

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _APP_URL: https://example.com
  _DB_HOST: 127.0.0.1
  _DB_NAME: app
  _DB_USER: user
  _DB_PASSWORD: password