FROM php:8.2-fpm-bullseye

# 作業ディレクトリを設定
WORKDIR /usr/share/nginx/html

# 必要なディレクトリを作成
RUN mkdir -p /var/www/vhosts/example.com/public_html
RUN touch /usr/local/etc/php-fpm.d/zzz-www.conf

# PHP-FPM設定をコピー
COPY ./docker/app/zzz-www.conf /usr/local/etc/php-fpm.d/zzz-www.conf

# パッケージとライブラリをインストール
RUN apt -y update
RUN apt install -y zlib1g-dev vim libzip-dev unzip git
RUN docker-php-ext-install zip pdo_mysql

# Composerをインストール
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
RUN php composer-setup.php
RUN php -r "unlink('composer-setup.php');"
RUN mv composer.phar /usr/local/bin/composer

ENV COMPOSER_ALLOW_SUPERUSER=1
ENV COMPOSER_HOME=/composer
ENV PATH=$PATH:/composer/vendor/bin

# 本番環境用の環境変数を設定（Pail無効化）
ENV APP_ENV=production
ENV PAIL_ENABLED=false

# Laravelアプリケーションコードをコピー
COPY ./src /usr/share/nginx/html

# プロダクション環境用の.envファイルをコピー
COPY ./src/.env.production /usr/share/nginx/html/.env

# Composerの依存関係をインストール（本番環境用、Pailを除外）
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Laravel設定の最適化（パッケージ検出を再実行）
RUN php artisan package:discover --ansi

# ファイル権限を設定
RUN chown -R www-data:www-data /var/www/vhosts/example.com/public_html
RUN chmod -R 775 /usr/share/nginx/html/storage
RUN chmod -R 775 /usr/share/nginx/html/bootstrap/cache

# Laravel設定の最適化
RUN php artisan config:cache
RUN php artisan route:cache
RUN php artisan view:cache

# スタートアップスクリプトをコピー
COPY ./docker/app/start-production.sh /usr/local/bin/start-production.sh
RUN chmod +x /usr/local/bin/start-production.sh

# ポート9000を公開
EXPOSE 9000

# カスタムスタートアップスクリプトを使用
CMD ["/usr/local/bin/start-production.sh"]
